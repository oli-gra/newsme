{"ast":null,"code":"import _slicedToArray from \"/Users/oli-gra/Dev/newsme/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/oli-gra/Dev/newsme/client/src/components/Post.js\";\nimport React, { useEffect } from 'react'; // styling\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FavoriteIcon from '@material-ui/icons/FavoriteBorder';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Badge from '@material-ui/core/Badge';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: 'transparent'\n  },\n  img: {\n    minWidth: '100%',\n    maxHeight: '40vh'\n  }\n}));\n\nconst Post = ({\n  post,\n  getNews,\n  updatePost,\n  numPosts\n}) => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        expanded = _React$useState2[0],\n        setExpanded = _React$useState2[1];\n\n  const node = React.useRef();\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : 0);\n  };\n\n  useEffect(() => {\n    const handleClick = e => {\n      if (!node.current.contains(e.target)) {\n        setExpanded(null);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n  let icon;\n  let dots;\n  let summary;\n  let content;\n\n  if (post.content.startsWith('https')) {\n    console.log('true');\n    content = React.createElement(\"img\", {\n      className: classes.img,\n      src: post.content,\n      alt: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  } else {\n    content = React.createElement(React.Fragment, null, post.content);\n  }\n\n  if (post.content.length > 50) {\n    icon = React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n    dots = '...';\n  }\n\n  if (expanded !== post.id) {\n    summary = React.createElement(ExpansionPanelSummary, {\n      expandIcon: icon,\n      className: \"postheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, post.content.slice(0, 40), dots);\n  }\n\n  return React.createElement(ExpansionPanel, {\n    ref: node,\n    className: classes.root,\n    square: true,\n    onChange: handleChange(post.id),\n    expanded: expanded === post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, summary, React.createElement(ExpansionPanelDetails, {\n    className: \"postcontent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, content), React.createElement(\"div\", {\n    className: \"postlikes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(BottomNavigation, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(BottomNavigationAction, {\n    label: \"Like\",\n    onClick: () => {\n      updatePost(post._id);\n    },\n    value: post.likes.length,\n    icon: React.createElement(Badge, {\n      badgeContent: post.likes.length,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FavoriteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/oli-gra/Dev/newsme/client/src/components/Post.js"],"names":["React","useEffect","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","ExpandMoreIcon","FavoriteIcon","BottomNavigation","BottomNavigationAction","Badge","makeStyles","useStyles","theme","root","backgroundColor","img","minWidth","maxHeight","Post","post","getNews","updatePost","numPosts","classes","useState","expanded","setExpanded","node","useRef","handleChange","panel","event","newExpanded","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","icon","dots","summary","content","startsWith","console","log","length","id","slice","_id","likes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACpCC,EAAAA,IAAI,EAAE;AACHC,IAAAA,eAAe,EAAE;AADd,GAD8B;AAIpCC,EAAAA,GAAG,EAAE;AACFC,IAAAA,QAAQ,EAAE,MADR;AAEFC,IAAAA,SAAS,EAAE;AAFT;AAJ+B,CAAL,CAAN,CAA5B;;AAUA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AACvD,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;;AADuD,0BAGvBX,KAAK,CAACwB,QAAN,CAAe,IAAf,CAHuB;AAAA;AAAA,QAGhDC,QAHgD;AAAA,QAGtCC,WAHsC;;AAIvD,QAAMC,IAAI,GAAG3B,KAAK,CAAC4B,MAAN,EAAb;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI,CAACC,KAAD,EAAQC,WAAR,KAAwB;AACnDN,IAAAA,WAAW,CAACM,WAAW,GAAGF,KAAH,GAAW,CAAvB,CAAX;AACF,GAFD;;AAIA7B,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMgC,WAAW,GAAGC,CAAC,IAAI;AACtB,UAAI,CAACP,IAAI,CAACQ,OAAL,CAAaC,QAAb,CAAsBF,CAAC,CAACG,MAAxB,CAAL,EAAsC;AACnCX,QAAAA,WAAW,CAAC,IAAD,CAAX;AACF;AACH,KAJD;;AAKAY,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,WAAvC;AACA,WAAO,MAAM;AACVK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,WAA1C;AACF,KAFD;AAGF,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAIQ,IAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,OAAJ;;AACA,MAAIzB,IAAI,CAACyB,OAAL,CAAaC,UAAb,CAAwB,OAAxB,CAAJ,EAAsC;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAH,IAAAA,OAAO,GAAG;AAAK,MAAA,SAAS,EAAErB,OAAO,CAACR,GAAxB;AAA6B,MAAA,GAAG,EAAEI,IAAI,CAACyB,OAAvC;AAAgD,MAAA,GAAG,EAAEzB,IAAI,CAACyB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACF,GAHD,MAGO;AAAEA,IAAAA,OAAO,GAAG,0CAAGzB,IAAI,CAACyB,OAAR,CAAV;AAA+B;;AACxC,MAAIzB,IAAI,CAACyB,OAAL,CAAaI,MAAb,GAAsB,EAA1B,EAA8B;AAC3BP,IAAAA,IAAI,GAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACAC,IAAAA,IAAI,GAAG,KAAP;AACF;;AACD,MAAIjB,QAAQ,KAAKN,IAAI,CAAC8B,EAAtB,EAA0B;AACvBN,IAAAA,OAAO,GAAG,oBAAC,qBAAD;AACP,MAAA,UAAU,EAAEF,IADL;AAEP,MAAA,SAAS,EAAC,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGRtB,IAAI,CAACyB,OAAL,CAAaM,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAHQ,EAGmBR,IAHnB,CAAV;AAKF;;AAED,SACG,oBAAC,cAAD;AACG,IAAA,GAAG,EAAEf,IADR;AAEG,IAAA,SAAS,EAAEJ,OAAO,CAACV,IAFtB;AAGG,IAAA,MAAM,MAHT;AAIG,IAAA,QAAQ,EAAEgB,YAAY,CAACV,IAAI,CAAC8B,EAAN,CAJzB;AAKG,IAAA,QAAQ,EAAExB,QAAQ,KAAKN,IAAI,CAAC8B,EAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIN,OANJ,EAOG,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,OADJ,CAPH,EAUG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,gBAAD;AACG,IAAA,SAAS,EAAErB,OAAO,CAACV,IADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,oBAAC,sBAAD;AACG,IAAA,KAAK,EAAC,MADT;AAEG,IAAA,OAAO,EAAE,MAAM;AACZQ,MAAAA,UAAU,CAACF,IAAI,CAACgC,GAAN,CAAV;AACF,KAJJ;AAKG,IAAA,KAAK,EAAEhC,IAAI,CAACiC,KAAL,CAAWJ,MALrB;AAMG,IAAA,IAAI,EAAE,oBAAC,KAAD;AACH,MAAA,YAAY,EAAE7B,IAAI,CAACiC,KAAL,CAAWJ,MADtB;AAEH,MAAA,KAAK,EAAC,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEe,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFf,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH,CAVH,CADH;AA6BF,CAvED;;AA0EA,eAAe9B,IAAf","sourcesContent":["import React, { useEffect } from 'react'\n\n// styling\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport FavoriteIcon from '@material-ui/icons/FavoriteBorder'\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Badge from '@material-ui/core/Badge'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n   root: {\n      backgroundColor: 'transparent',\n   },\n   img: {\n      minWidth: '100%',\n      maxHeight: '40vh',\n   },\n}))\n\nconst Post = ({ post, getNews, updatePost, numPosts }) => {\n   const classes = useStyles();\n\n   const [expanded, setExpanded] = React.useState(null);\n   const node = React.useRef()\n\n   const handleChange = panel => (event, newExpanded) => {\n      setExpanded(newExpanded ? panel : 0);\n   }\n\n   useEffect(() => {\n      const handleClick = e => {\n         if (!node.current.contains(e.target)) {\n            setExpanded(null)\n         }\n      }\n      document.addEventListener(\"mousedown\", handleClick)\n      return () => {\n         document.removeEventListener(\"mousedown\", handleClick)\n      }\n   }, [])\n\n   let icon\n   let dots\n   let summary\n   let content\n   if (post.content.startsWith('https')) {\n      console.log('true')\n      content = <img className={classes.img} src={post.content} alt={post.content} />\n   } else { content = <>{post.content}</> }\n   if (post.content.length > 50) {\n      icon = <ExpandMoreIcon />\n      dots = '...'\n   }\n   if (expanded !== post.id) {\n      summary = <ExpansionPanelSummary\n         expandIcon={icon}\n         className='postheader'\n      >{post.content.slice(0, 40)}{dots}\n      </ExpansionPanelSummary>\n   }\n\n   return (\n      <ExpansionPanel\n         ref={node}\n         className={classes.root}\n         square\n         onChange={handleChange(post.id)}\n         expanded={expanded === post.id}>\n         {summary}\n         <ExpansionPanelDetails className='postcontent'>\n            {content}\n         </ExpansionPanelDetails>\n         <div className='postlikes'>\n            <BottomNavigation\n               className={classes.root}>\n               <BottomNavigationAction\n                  label=\"Like\"\n                  onClick={() => {\n                     updatePost(post._id)\n                  }}\n                  value={post.likes.length}\n                  icon={<Badge\n                     badgeContent={post.likes.length}\n                     color=\"secondary\"><FavoriteIcon /></Badge>} />\n\n            </BottomNavigation>\n         </div>\n\n      </ExpansionPanel>\n   )\n}\n\n\nexport default Post"]},"metadata":{},"sourceType":"module"}