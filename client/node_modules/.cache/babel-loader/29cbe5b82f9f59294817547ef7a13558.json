{"ast":null,"code":"import _slicedToArray from \"/Users/oli-gra/Dev/newsme/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/oli-gra/Dev/newsme/client/src/components/PostBox.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as firebase from 'firebase/app';\nimport Post from './Post';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    width: '75%'\n  },\n  dense: {\n    marginTop: theme.spacing(1)\n  },\n  button: {\n    marginTop: theme.spacing(3)\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nconst PostBox = ({\n  newsId,\n  userId,\n  handlePostBox,\n  getNews\n}) => {\n  const classes = useStyles();\n  const url = 'http://localhost:3003'; // Node server\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        posts = _useState2[0],\n        setPosts = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        post = _useState4[0],\n        setPost = _useState4[1];\n\n  const node = React.useRef();\n  const file = React.useRef();\n  useEffect(() => {\n    const handleClick = e => {\n      if (!node.current.contains(e.target)) {\n        return handlePostBox();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, [handlePostBox, newsId]);\n  useEffect(() => {\n    if (newsId) {\n      getPosts(newsId);\n    }\n  }, [newsId]);\n\n  const getPosts = newsId => axios.get(url + '/posts?nid=' + newsId).then(res => setPosts(res.data)).catch(err => console.log(err));\n\n  const updatePost = pid => {\n    axios.patch(\"\".concat(url, \"/posts?pid=\").concat(pid, \"&uid=\").concat(userId)).then(res => {\n      const likedPost = res.data.value;\n      const postMap = posts.map(p => p._id === likedPost._id ? p = likedPost : p);\n      setPosts(postMap);\n    });\n  };\n\n  const postPost = content => {\n    let post = {\n      content: content,\n      uid: userId,\n      nid: newsId\n    };\n    return axios.post(url + '/posts/new', post).then(res => res.data.ops[0]).then(post => setPosts([post, ...posts])).catch(err => console.log(err));\n  };\n\n  const postFile = () => {\n    if (file.current.files[0]) {\n      const storageRef = firebase.storage().ref();\n      const imageRef = storageRef.child(file.current.files[0].name);\n      imageRef.put(file.current.files[0]).then(() => console.log(\"\\u2705 uploaded \".concat(imageRef.fullPath))).then(() => storageRef.child(file.current.files[0].name).getDownloadURL()).then(url => {\n        postPost(url);\n      });\n    }\n  };\n\n  const handleEnter = e => {\n    if (e.keyCode === 13) {\n      setPost('');\n      postPost(e.target.value);\n    }\n  };\n\n  const handleChange = e => postFile();\n\n  return React.createElement(\"div\", {\n    className: \"postbox\",\n    ref: node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-name\",\n    label: \"post\",\n    className: classes.textField,\n    type: \"text\",\n    value: post,\n    onChange: event => setPost(event.target.value),\n    onKeyDown: event => handleEnter(event),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"outlined-button-file\",\n    type: \"file\",\n    ref: file,\n    onChange: e => handleChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"outlined-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    size: \"small\",\n    color: \"secondary\",\n    component: \"span\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))), posts.map(post => React.createElement(Post, {\n    key: post._id,\n    post: post,\n    getNews: getNews,\n    updatePost: updatePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })));\n};\n\nexport default PostBox;","map":{"version":3,"sources":["/Users/oli-gra/Dev/newsme/client/src/components/PostBox.js"],"names":["React","useState","useEffect","axios","firebase","Post","TextField","Fab","AddIcon","makeStyles","useStyles","theme","textField","marginLeft","spacing","marginRight","width","dense","marginTop","button","input","display","PostBox","newsId","userId","handlePostBox","getNews","classes","url","posts","setPosts","post","setPost","node","useRef","file","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","getPosts","get","then","res","data","catch","err","console","log","updatePost","pid","patch","likedPost","value","postMap","map","p","_id","postPost","content","uid","nid","ops","postFile","files","storageRef","storage","ref","imageRef","child","name","put","fullPath","getDownloadURL","handleEnter","keyCode","handleChange","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport * as firebase from 'firebase/app'\n\nimport Post from './Post'\nimport TextField from '@material-ui/core/TextField'\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n   textField: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      width: '75%',\n   },\n   dense: {\n      marginTop: theme.spacing(1),\n   },\n   button: {\n      marginTop: theme.spacing(3)\n   },\n   input: {\n      display: 'none',\n   },\n}))\n\nconst PostBox = ({ newsId, userId, handlePostBox, getNews }) => {\n\n   const classes = useStyles()\n   const url = 'http://localhost:3003' // Node server\n   const [posts, setPosts] = useState([])\n   const [post, setPost] = useState('')\n\n   const node = React.useRef()\n   const file = React.useRef()\n\n   useEffect(() => {\n      const handleClick = e => {\n         if (!node.current.contains(e.target)) {\n            return handlePostBox()\n         }\n      }\n      document.addEventListener(\"mousedown\", handleClick)\n      return () => {\n         document.removeEventListener(\"mousedown\", handleClick)\n      }\n   }, [handlePostBox, newsId])\n\n   useEffect(() => {\n      if (newsId) { getPosts(newsId) }\n   }, [newsId])\n\n   const getPosts = newsId =>\n      axios.get(url + '/posts?nid=' + newsId)\n         .then(res => setPosts(res.data))\n         .catch(err => console.log(err))\n\n   const updatePost = pid => {\n      axios.patch(`${url}/posts?pid=${pid}&uid=${userId}`)\n         .then(res => {\n            const likedPost = res.data.value\n            const postMap = posts.map(p =>\n               p._id === likedPost._id\n                  ? p = likedPost\n                  : p\n            )\n            setPosts(postMap)\n         })\n   }\n\n   const postPost = content => {\n      let post = {\n         content: content,\n         uid: userId,\n         nid: newsId,\n      }\n      return axios.post(url + '/posts/new', post)\n         .then(res => res.data.ops[0])\n         .then(post => setPosts([post, ...posts]))\n         .catch(err => console.log(err))\n   }\n\n\n   const postFile = () => {\n      if (file.current.files[0]) {\n         const storageRef = firebase.storage().ref()\n         const imageRef = storageRef.child(file.current.files[0].name)\n         imageRef.put(file.current.files[0])\n            .then(() => console.log(`✅ uploaded ${imageRef.fullPath}`))\n            .then(() => storageRef.child(file.current.files[0].name).getDownloadURL())\n            .then(url => { postPost(url) })\n      }\n   }\n\n   const handleEnter = e => {\n      if (e.keyCode === 13) {\n         setPost('')\n         postPost(e.target.value)\n      }\n   }\n\n   const handleChange = e =>\n      postFile()\n\n   return (\n      <div className='postbox' ref={node}>\n         <TextField\n            id=\"outlined-name\"\n            label='post'\n            className={classes.textField}\n            type='text'\n            value={post}\n            onChange={event => setPost(event.target.value)}\n            onKeyDown={event => handleEnter(event)}\n            margin=\"normal\"\n            variant=\"outlined\"\n         />\n         <input\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            ref={file}\n            onChange={e => handleChange(e)}\n         />\n         <label htmlFor=\"outlined-button-file\">\n            <Fab\n               size=\"small\"\n               color=\"secondary\"\n               component=\"span\"\n               className={classes.button}>\n               <AddIcon />\n            </Fab>\n         </label>\n         {posts.map(post => <Post\n            key={post._id}\n            post={post}\n            getNews={getNews}\n            updatePost={updatePost}\n         />)}\n\n      </div>)\n}\n\nexport default PostBox"]},"metadata":{},"sourceType":"module"}